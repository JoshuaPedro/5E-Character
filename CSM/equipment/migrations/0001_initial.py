# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-06 23:31
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Armor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentBonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the weapon.', max_length=100, unique=True)),
                ('simple_or_martial', models.BooleanField(default=False, help_text='False = Simple Weapon, True = Martial Weapon.')),
                ('melee_or_ranged', models.BooleanField(default=False, help_text='False = Melee Weapon, True = Ranged Weapon.')),
                ('normal_range', models.SmallIntegerField(blank=True, help_text='If a ranged weapon, any attack over normal range is made at disadvantage.', null=True)),
                ('max_range', models.SmallIntegerField(blank=True, help_text='Maximum range a weapon can attack.')),
                ('cost_copper', models.SmallIntegerField(blank=True, help_text='Cost in copper pieces.', null=True)),
                ('cost_silver', models.SmallIntegerField(blank=True, help_text='Cost in silver pieces.', null=True)),
                ('cost_gold', models.SmallIntegerField(blank=True, help_text='Cost in gold pieces.', null=True)),
                ('cost_platinum', models.SmallIntegerField(blank=True, help_text='Cost in platinum pieces.', null=True)),
                ('damage_dice_number', models.SmallIntegerField(help_text='Ex: Xd6 + 1.')),
                ('damage_dice_size', models.SmallIntegerField(help_text='Ex: 1dX + 1.')),
                ('damage_dice_bonus', models.SmallIntegerField(blank=True, help_text='Ex: 1d6 + X.', null=True)),
                ('damage_type', models.CharField(choices=[('AC', 'Acid'), ('BL', 'Bludgeoning'), ('CO', 'Cold'), ('FI', 'Fire'), ('FO', 'Force'), ('LI', 'Lightning'), ('NE', 'Necrotic'), ('PI', 'Piercing'), ('PO', 'Poison'), ('PS', 'Psychic'), ('RA', 'Radiant'), ('SL', 'Slashing'), ('TH', 'Thunder')], help_text='What kind of damage is done by the weapon.', max_length=2)),
                ('weight', models.SmallIntegerField(help_text='Carrying weight of the weapon.')),
                ('description', models.TextField(help_text='Full description of the weapon.')),
                ('special', models.CharField(blank=True, help_text='General field for additional rules.', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeaponProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the weapon property.', max_length=100, unique=True)),
                ('description', models.TextField(help_text='Full description of the weapon property.')),
            ],
        ),
        migrations.AddField(
            model_name='weapon',
            name='properties',
            field=models.ManyToManyField(related_name='weapons', to='equipment.WeaponProperty'),
        ),
    ]
